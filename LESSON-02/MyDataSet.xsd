<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="MyDataSet" targetNamespace="http://tempuri.org/MyDataSet.xsd" xmlns:mstns="http://tempuri.org/MyDataSet.xsd" xmlns="http://tempuri.org/MyDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="ClinicConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="ClinicConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.LESSON_02.Properties.Settings.GlobalReference.Default.ClinicConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RolesTableAdapter" GeneratorDataComponentClassName="RolesTableAdapter" Name="Roles" UserDataComponentName="RolesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ClinicConnectionString (Settings)" DbObjectName="Clinic.dbo.Roles" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillRoles" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetRoles" GeneratorSourceName="FillRoles" GetMethodModifier="Public" GetMethodName="GetRoles" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetRoles" UserSourceName="FillRoles">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Roles] WHERE (([RoleID] = @Original_RoleID) AND ([RoleName] = @Original_RoleName) AND ([RoleIsActive] = @Original_RoleIsActive))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_RoleID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoleID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_RoleName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RoleName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_RoleIsActive" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="RoleIsActive" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Roles] ([RoleID], [RoleName], [RoleIsActive]) VALUES (@RoleID, @RoleName, @RoleIsActive);
SELECT RoleID, RoleName, RoleIsActive FROM Roles WHERE (RoleID = @RoleID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@RoleID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoleID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@RoleName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RoleName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@RoleIsActive" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="RoleIsActive" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT RoleID, RoleName, RoleIsActive FROM dbo.Roles</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Roles] SET [RoleID] = @RoleID, [RoleName] = @RoleName, [RoleIsActive] = @RoleIsActive WHERE (([RoleID] = @Original_RoleID) AND ([RoleName] = @Original_RoleName) AND ([RoleIsActive] = @Original_RoleIsActive));
SELECT RoleID, RoleName, RoleIsActive FROM Roles WHERE (RoleID = @RoleID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@RoleID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoleID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@RoleName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RoleName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@RoleIsActive" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="RoleIsActive" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_RoleID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoleID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_RoleName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RoleName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_RoleIsActive" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="RoleIsActive" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="RoleID" DataSetColumn="RoleID" />
              <Mapping SourceColumn="RoleName" DataSetColumn="RoleName" />
              <Mapping SourceColumn="RoleIsActive" DataSetColumn="RoleIsActive" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="ClinicConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteByIsActive" Modifier="Public" Name="DeleteByIsActive" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="DeleteByIsActive">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM Roles
WHERE        (RoleIsActive = @Original_RoleIsActive)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_RoleIsActive" ColumnName="RoleIsActive" DataSourceName="Clinic.dbo.Roles" DataTypeServer="bit" DbType="Boolean" Direction="Input" ParameterName="@Original_RoleIsActive" Precision="0" ProviderType="Bit" Scale="0" Size="1" SourceColumn="RoleIsActive" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="ClinicConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteByRoleId" Modifier="Public" Name="DeleteByRoleId" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="DeleteByRoleId">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM Roles
WHERE        (RoleID = @Original_RoleID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_RoleID" ColumnName="RoleID" DataSourceName="Clinic.dbo.Roles" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_RoleID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="RoleID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="ClinicConnectionString (Settings)" DbObjectName="Clinic.dbo.Roles" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByIsActive" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByIsActive" GeneratorSourceName="FillByIsActive" GetMethodModifier="Public" GetMethodName="GetDataByIsActive" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByIsActive" UserSourceName="FillByIsActive">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        RoleID, RoleName, RoleIsActive
FROM            Roles
WHERE        (RoleIsActive = 1)</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="ClinicConnectionString (Settings)" DbObjectName="Clinic.dbo.Roles" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByIsActive1" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByIsActive1" GeneratorSourceName="FillByIsActive1" GetMethodModifier="Public" GetMethodName="GetDataByIsActive1" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByIsActive1" UserSourceName="FillByIsActive1">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        RoleID, RoleName, RoleIsActive
FROM            Roles
WHERE        (RoleIsActive = @RoleIsActive)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="RoleIsActive" ColumnName="RoleIsActive" DataSourceName="Clinic.dbo.Roles" DataTypeServer="bit" DbType="Boolean" Direction="Input" ParameterName="@RoleIsActive" Precision="0" ProviderType="Bit" Scale="0" Size="1" SourceColumn="RoleIsActive" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="ClinicConnectionString (Settings)" DbObjectName="Clinic.dbo.Roles" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByRolesByRoleId" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetRolesByRoleId" GeneratorSourceName="FillByRolesByRoleId" GetMethodModifier="Public" GetMethodName="GetRolesByRoleId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetRolesByRoleId" UserSourceName="FillByRolesByRoleId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        RoleID, RoleName, RoleIsActive
FROM            Roles
WHERE        (RoleID = @RoleID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="RoleID" ColumnName="RoleID" DataSourceName="Clinic.dbo.Roles" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@RoleID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="RoleID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="ClinicConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateRoles" Modifier="Public" Name="UpdateRoles" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="UpdateRoles">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE       Roles
SET                RoleName = @RoleName, RoleIsActive = @RoleIsActive
WHERE        (RoleID = @Original_RoleID); 
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="RoleName" ColumnName="RoleName" DataSourceName="Clinic.dbo.Roles" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@RoleName" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="RoleName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="RoleIsActive" ColumnName="RoleIsActive" DataSourceName="Clinic.dbo.Roles" DataTypeServer="bit" DbType="Boolean" Direction="Input" ParameterName="@RoleIsActive" Precision="0" ProviderType="Bit" Scale="0" Size="1" SourceColumn="RoleIsActive" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_RoleID" ColumnName="RoleID" DataSourceName="Clinic.dbo.Roles" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_RoleID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="RoleID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="MyDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="MyDataSet" msprop:Generator_UserDSName="MyDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Roles" msprop:Generator_TableClassName="RolesDataTable" msprop:Generator_TableVarName="tableRoles" msprop:Generator_TablePropName="Roles" msprop:Generator_RowDeletingName="RolesRowDeleting" msprop:Generator_RowChangingName="RolesRowChanging" msprop:Generator_RowEvHandlerName="RolesRowChangeEventHandler" msprop:Generator_RowDeletedName="RolesRowDeleted" msprop:Generator_UserTableName="Roles" msprop:Generator_RowChangedName="RolesRowChanged" msprop:Generator_RowEvArgName="RolesRowChangeEvent" msprop:Generator_RowClassName="RolesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="RoleID" msprop:Generator_ColumnVarNameInTable="columnRoleID" msprop:Generator_ColumnPropNameInRow="RoleID" msprop:Generator_ColumnPropNameInTable="RoleIDColumn" msprop:Generator_UserColumnName="RoleID" type="xs:int" />
              <xs:element name="RoleName" msprop:Generator_ColumnVarNameInTable="columnRoleName" msprop:Generator_ColumnPropNameInRow="RoleName" msprop:Generator_ColumnPropNameInTable="RoleNameColumn" msprop:Generator_UserColumnName="RoleName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="RoleIsActive" msprop:Generator_ColumnVarNameInTable="columnRoleIsActive" msprop:Generator_ColumnPropNameInRow="RoleIsActive" msprop:Generator_ColumnPropNameInTable="RoleIsActiveColumn" msprop:Generator_UserColumnName="RoleIsActive" type="xs:boolean" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Roles" />
      <xs:field xpath="mstns:RoleID" />
    </xs:unique>
  </xs:element>
</xs:schema>